docker volume create db-persist

docker network create app-network

docker run --rm -p 3307:3306 \
  -e MYSQL_ROOT_USERNAME=root \
  -e MYSQL_ROOT_PASSWORD=Passw@rd \
  -e MYSQL_PASSWORD=Passw@rd \
  -v db-persist:/var/lib/mysql \
  -v ./sql-scripts:/docker-entrypoint-initdb.d \
  --name mysqldb \
  --net app-network \
  -d mysql:5.7


docker build -t coursesvc -f ./CourseMgmtMs/Dockerfile ./CourseMgmtMs
docker run --rm --name coursesvc -p 8080:8080 -p 9990:9990 -e MYSQL_PASSWORD=Passw@rd --net app-network -d coursesvc 

timeout /t 5 /nobreak

docker exec -it coursesvc /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command="jms-queue add --queue-address=enrollQueue --entries=[queue/enrollQueue jms/queue/enrollQueue java:jboss/exported/jms/queue/enrollQueue]"

docker restart coursesvc

docker build -t usersvc -f ./UserMgmtMs/Dockerfile ./UserMgmtMs
docker run --rm --name usersvc -p 8085:8085 -e MYSQL_PASSWORD=Passw@rd --net app-network -d usersvc

docker build -t notifysvc -f ./NotifMgmtMs/Dockerfile ./NotifMgmtMs
docker run --rm --name notifysvc -p 8085:8085 -e MYSQL_PASSWORD=Passw@rd --net app-network -d notifysvc

docker build -t frontsvc -f ./frontend-lms/Dockerfile ./frontend-lms
docker run --rm --name frontsvc -p 7000:7000 --net app-network -d frontsvc


 